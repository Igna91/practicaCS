buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'org.eclipse.jgit:org.eclipse.jgit:4.2.0.201601211800-r'



    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

import org.eclipse.jgit.api.*
import org.eclipse.jgit.internal.storage.file.FileRepository
import org.eclipse.jgit.transport.*

def localPath = "$localPath"
def remotePath = "$remotePath"
def localRepo = new FileRepository(localPath + "/.git")
def git = new Git(localRepo)

task commit << {
    git.add().addFilepattern(".").call();
    git.commit().setMessage("Added myfile").call();
}

task Cpush << {
    def credentials = new UsernamePasswordCredentialsProvider("$user", "$password")
    def push = git.push();
    push.setCredentialsProvider(credentials);
    push.call();
}

task clone << {
    Git.cloneRepository().setURI(remotePath).setDirectory(new File(localPath)).call()
}

apply plugin: 'java'
sourceCompatibility = 1.7
targetCompatibility = 1.7



apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'


dependencies {

    compile 'org.springframework:spring-core:4.0.5.RELEASE'
    compile 'org.springframework:spring-webmvc:4.0.5.RELEASE'

    compile 'org.slf4j:slf4j-api:1.7.5'
    runtime 'org.slf4j:slf4j-log4j12:1.7.5'

    testCompile 'org.springframework:spring-test:4.0.5.RELEASE'


    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile "org.hamcrest:hamcrest-library:1.3"

    testCompile 'javax.servlet:javax.servlet-api:3.0.1'
}
test {
    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }
}
task wrapper(type: Wrapper) { gradleVersion = '1.12' }
task createPom  {
    pom {
        project {
            groupId 'com.ps.grupo2.comunio'
            artifactId 'distro'
            version '1.0.0-SNAPSHOT'

            inceptionYear '2008'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("pom.xml")
}

